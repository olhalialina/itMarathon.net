// <auto-generated />
using System;
using ItMarathon.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ItMarathon.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240802204309_AddIndexesAndUpdateDeleteBehavior")]
    partial class AddIndexesAndUpdateDeleteBehavior
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ItMarathon.Dal.Entities.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.Property", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomValue")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("PredefinedValueId")
                        .HasColumnType("bigint");

                    b.Property<long>("PropertyDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProposalId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RequestId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CustomValue");

                    b.HasIndex("PredefinedValueId");

                    b.HasIndex("PropertyDefinitionId");

                    b.HasIndex("ProposalId");

                    b.HasIndex("RequestId");

                    b.ToTable("Properties", t =>
                        {
                            t.HasCheckConstraint("CK_Property_ProposalId_RequestId", "ProposalId IS NOT NULL OR RequestId IS NOT NULL");
                        });
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.PropertyDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PropertyDefinitionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("PropertiesDefinition");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsMandatory = true,
                            Name = "Вид тварини",
                            PropertyDefinitionType = 0
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsMandatory = true,
                            Name = "Порода",
                            PropertyDefinitionType = 0
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsMandatory = true,
                            Name = "Стать",
                            PropertyDefinitionType = 0
                        },
                        new
                        {
                            Id = 4L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsMandatory = true,
                            Name = "Вік",
                            PropertyDefinitionType = 0
                        },
                        new
                        {
                            Id = 5L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsMandatory = true,
                            Name = "Забарвлення",
                            PropertyDefinitionType = 0
                        });
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.PropertyValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("PropertyDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyDefinitionId");

                    b.HasIndex("Value");

                    b.ToTable("PropertyValues");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 1L,
                            Value = "Собаки"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 1L,
                            Value = "Коти"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 1L,
                            Value = "Гризуни"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 1L,
                            Value = "Риби"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 1L,
                            Value = "Птахи"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 1L,
                            Value = "Рептилії"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 1L,
                            Value = "Інші"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 3L,
                            Value = "Хлопчик"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 3L,
                            Value = "Дівчинка"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 5L,
                            Value = "Руде"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 5L,
                            Value = "Біле"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 5L,
                            Value = "Чорне"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyDefinitionId = 5L,
                            Value = "Сіре"
                        });
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.Proposal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AppUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("varchar(1500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("Location");

                    b.HasIndex("Price");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.ProposalPhoto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("ProposalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.ToTable("ProposalsPhoto");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AppUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.Property", b =>
                {
                    b.HasOne("ItMarathon.Dal.Entities.PropertyValue", "PredefinedValue")
                        .WithOne("Property")
                        .HasForeignKey("ItMarathon.Dal.Entities.Property", "PredefinedValueId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ItMarathon.Dal.Entities.PropertyDefinition", "PropertyDefinition")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ItMarathon.Dal.Entities.Proposal", "Proposal")
                        .WithMany("Properties")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ItMarathon.Dal.Entities.Request", "Request")
                        .WithMany("Properties")
                        .HasForeignKey("RequestId");

                    b.Navigation("PredefinedValue");

                    b.Navigation("PropertyDefinition");

                    b.Navigation("Proposal");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.PropertyValue", b =>
                {
                    b.HasOne("ItMarathon.Dal.Entities.PropertyDefinition", "PropertyDefinition")
                        .WithMany("PropertyValues")
                        .HasForeignKey("PropertyDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertyDefinition");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.Proposal", b =>
                {
                    b.HasOne("ItMarathon.Dal.Entities.AppUser", "AppUser")
                        .WithMany("Proposals")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.ProposalPhoto", b =>
                {
                    b.HasOne("ItMarathon.Dal.Entities.Proposal", "Proposal")
                        .WithMany("Photos")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.Request", b =>
                {
                    b.HasOne("ItMarathon.Dal.Entities.AppUser", "AppUser")
                        .WithMany("Requests")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.AppUser", b =>
                {
                    b.Navigation("Proposals");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.PropertyDefinition", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("PropertyValues");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.PropertyValue", b =>
                {
                    b.Navigation("Property");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.Proposal", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("ItMarathon.Dal.Entities.Request", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
